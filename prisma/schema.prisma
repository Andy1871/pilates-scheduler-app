generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:XQrQFoK9FMphP5NU@db.nrvqghasivogwpfvbarg.supabase.co:5432/postgres?sslmode=require"
}

model User {
  id       String    @id @default(cuid())
  name     String?
  email    String?   @unique
  image    String?
  accounts Account[]
  events   Event[]
  sessions Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  access_token      String?
  refresh_token     String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Event {
  id           String     @id @default(cuid())
  kind         Kind
  status       Status
  start        DateTime
  end          DateTime
  person       String?
  classType    ClassType?
  reason       String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  durationMins Int?
  seriesId     String?
  userId       String?
  user         User?      @relation(fields: [userId], references: [id])

  @@index([start])
  @@index([end])
  @@index([seriesId])
  @@index([userId])
}

/// *
/// * =======================
/// * Your existing enums
/// * =======================
enum Status {
  paid
  unpaid
  hold
  blocked
}

enum ClassType {
  reformer
  mat
  duo
}

enum Kind {
  booking
  block
}
